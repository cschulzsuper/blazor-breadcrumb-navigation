@page "/fetch-data"
@page "/fetch-data/{date:datetime}"

@inject HttpClient Http

<h1>Fetch data</h1>

<div class="alert alert-warning" role="alert">
    Please bear in mind that this demo does not show the status of the current release.
    The demo can use features which have not been released.
</div>

<p>This page demonstrates the usage of text only breadcrumbs, with an additional icon.</p>

<pre class="border rounded bg-light p-3">
public override Task ConfigureAsync(IBreadcrumbProperties builder)
{
    var date = Date ?? DateTime.Today;

    builder.Text(date.ToShortDateString());
    builder.RightIcon("oi oi-x", () => NavigationManager.NavigateTo("/fetch-data"));

    return Task.CompletedTask;
}
</pre>

<p>Click on a date below, to see how the text only breadcrumb is rendered at the top.</p>

@if (forecasts == null)
{
<p><em>Loading...</em></p>
}
else
{
<table class="table">
<thead>
<tr>
<th>Date</th>
<th>Temp. (C)</th>
<th>Temp. (F)</th>
<th>Summary</th>
            </tr>
        </thead>
<tbody>
            @foreach (var forecast in forecasts)
            {
<tr>
<td>
<NavLink class="nav-link"
         href=@($"fetch-data/{forecast.Date:yyyy-MM-dd}")>
                            @forecast.Date.ToShortDateString()
                        </NavLink>
                    </td>
<td>@forecast.TemperatureC</td>
<td>@forecast.TemperatureF</td>
<td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    public DateTime? Date { get; set; }

    [CascadingParameter]
    private IBreadcrumbService BreadcrumbService { get; set; }

    private WeatherForecast[] forecasts;

    protected override async Task OnParametersSetAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        if (Date.HasValue)
        {
            forecasts = forecasts
                .Where(x => x.Date.Date == Date)
                .ToArray();
        }
    }

    protected override void OnAfterRender(bool _)
    {
        BreadcrumbService
            .Set<IndexBreadcrumb>()
            .Set<FetchDataBreadcrumb>();

        if (Date.HasValue)
        {
            var parameters = new Dictionary<string, object> { ["date"] = Date };
            BreadcrumbService.Set<FetchDataItemBreadcrumb>(parameters);
        }
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
